// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace laakapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230112145724_3")]
    partial class _3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Datum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Datum");
                });

            modelBuilder.Entity("FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("beschrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("fotoAlt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("showName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FileModels");
                });

            modelBuilder.Entity("ShowDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("beschrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("fotoAlt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("showName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ShowDTO");
                });

            modelBuilder.Entity("ShowSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DatumId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FileModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShowId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ZaalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DatumId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("ShowId");

                    b.HasIndex("ZaalId");

                    b.ToTable("ShowSchedule");
                });

            modelBuilder.Entity("Zaal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Zaal");
                });

            modelBuilder.Entity("ShowSchedule", b =>
                {
                    b.HasOne("Datum", "Datum")
                        .WithMany("ShowSchedules")
                        .HasForeignKey("DatumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FileModel", null)
                        .WithMany("ShowSchedules")
                        .HasForeignKey("FileModelId");

                    b.HasOne("ShowDTO", "Show")
                        .WithMany()
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zaal", "Zaal")
                        .WithMany("ShowSchedules")
                        .HasForeignKey("ZaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Datum");

                    b.Navigation("Show");

                    b.Navigation("Zaal");
                });

            modelBuilder.Entity("Datum", b =>
                {
                    b.Navigation("ShowSchedules");
                });

            modelBuilder.Entity("FileModel", b =>
                {
                    b.Navigation("ShowSchedules");
                });

            modelBuilder.Entity("Zaal", b =>
                {
                    b.Navigation("ShowSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
