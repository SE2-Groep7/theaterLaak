// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace theaterlaak.Migrations
{
    [DbContext(typeof(dbContext))]
    [Migration("20221222005221_4")]
    partial class _4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("wachtwoord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("AccountGenreDTO", b =>
                {
                    b.Property<int>("IntressesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("accountsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IntressesId", "accountsId");

                    b.HasIndex("accountsId");

                    b.ToTable("AccountGenreDTO");
                });

            modelBuilder.Entity("AccountKaartDTO", b =>
                {
                    b.Property<int>("AankoopGeschiedenisId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("accountsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AankoopGeschiedenisId", "accountsId");

                    b.HasIndex("accountsId");

                    b.ToTable("AccountKaartDTO");
                });

            modelBuilder.Entity("Donateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("accountId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Donateur");
                });

            modelBuilder.Entity("GenreDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GenreDTO");
                });

            modelBuilder.Entity("KaartDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Waarheidsmerk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("KaartDTO");
                });

            modelBuilder.Entity("AccountGenreDTO", b =>
                {
                    b.HasOne("GenreDTO", null)
                        .WithMany()
                        .HasForeignKey("IntressesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Account", null)
                        .WithMany()
                        .HasForeignKey("accountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccountKaartDTO", b =>
                {
                    b.HasOne("KaartDTO", null)
                        .WithMany()
                        .HasForeignKey("AankoopGeschiedenisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Account", null)
                        .WithMany()
                        .HasForeignKey("accountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
